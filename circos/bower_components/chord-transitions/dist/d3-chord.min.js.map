{"version":3,"sources":["chordDirective.js"],"names":["angular","module","matrixFactory","chordMatrix","chordID","d","s","matrixIndex","source","index","t","target","chordLayout","layoutCache","_matrix","objs","entry","dataStore","indexHash","filter","reduce","matrix","update","groups","chords","this","forEach","group","_id","startAngle","endAngle","chord","Object","keys","i","length","j","obj","valueOf","value","data","func","layout","d3_chordLayout","map","addKey","key","name","addKeys","props","fun","resetKeys","groupTween","d3_arc","tween","cached","d3","interpolateObject","chordTween","d3_path","push","read","g","m","sname","sdata","svalue","stotal","k","n","tname","tdata","tvalue","ttotal","gname","gdata","gvalue","mtotal","m1","n1","m2","n2","d3ChordDirective","$window","colorPalette","link","$scope","$el","$attr","draw","groupClick","event","preventDefault","stopPropagation","config","callback","$$phase","$root","$apply","resetChords","chordMouseover","dimChords","$tooltip","css","tooltip","formatter","info","left","offsetX","top","offsetY","html","hideTooltip","gContainer","selectAll","style","p","messages","attr","transition","duration","gEnter","enter","append","on","colors","arc","text","select","attrTween","angle","r","Math","PI","innerRadius","exit","remove","path","getSize","dims","dimension","width","height","ratio","split","reverse","Number","clientWidth","$container","marg","resize","size","svg","id","$id","find","scale","ordinal","range","padding","sortGroups","descending","sortSubgroups","ascending","item","c","node1","node2","items","weight1","weight2","outerRadius","radius","$watch","current","prev","addEventListener","restrict","template","replace","scope","factory","directive","$inject"],"mappings":"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","file":"d3-chord.min.js","sourcesContent":["(function (angular) {\n  \"use strict\";\n /**\n  * d3-chord module\n  */\n  angular.module('d3-chord', []);\n})(angular);\n(function (angular) {\n    \"use strict\";\n    angular.module('d3-chord').factory('matrixFactory',matrixFactory);\n    function matrixFactory(){\n        var chordMatrix = function () {\n\n            var _matrix = [], objs = [], entry = {}, dataStore = [], _id = 0;\n            var matrixIndex = [], indexHash = {};\n            var chordLayout, layoutCache;\n\n            var filter = function () { };\n            var reduce = function () { };\n\n            var matrix = {};\n\n            matrix.update = function () {\n                _matrix = [], objs = [], entry = {};\n\n                layoutCache = { groups: {}, chords: {} };\n\n                this.groups().forEach(function (group) {\n                    layoutCache.groups[group._id] = {\n                        startAngle: group.startAngle,\n                        endAngle: group.endAngle\n                    };\n                });\n\n                this.chords().forEach(function (chord) {\n                    layoutCache.chords[chordID(chord)] = {\n                        source: {\n                            _id: chord.source._id,\n                            startAngle: chord.source.startAngle,\n                            endAngle: chord.source.endAngle\n                        },\n                        target: {\n                            _id: chord.target._id,\n                            startAngle: chord.target.startAngle,\n                            endAngle: chord.target.endAngle\n                        }\n                    };\n                });\n\n                matrixIndex = Object.keys(indexHash);\n\n                for (var i = 0; i < matrixIndex.length; i++) {\n                    if (!_matrix[i]) {\n                        _matrix[i] = [];\n                    }\n                    for (var j = 0; j < matrixIndex.length; j++) {\n                        objs = dataStore.filter(function (obj) {\n                            return filter(obj, indexHash[matrixIndex[i]], indexHash[matrixIndex[j]]);\n                        });\n                        entry = reduce(objs, indexHash[matrixIndex[i]], indexHash[matrixIndex[j]]);\n                        entry.valueOf = function () { return +this.value };\n                        _matrix[i][j] = entry;\n                    }\n                }\n                chordLayout.matrix(_matrix);\n                return _matrix;\n            };\n\n            matrix.data = function (data) {\n                dataStore = data;\n                return this;\n            };\n\n            matrix.filter = function (func) {\n                filter = func;\n                return this;\n            };\n\n            matrix.reduce = function (func) {\n                reduce = func;\n                return this;\n            };\n\n            matrix.layout = function (d3_chordLayout) {\n                chordLayout = d3_chordLayout;\n                return this;\n            };\n\n            matrix.groups = function () {\n                return chordLayout.groups().map(function (group) {\n                    group._id = matrixIndex[group.index];\n                    return group;\n                });\n            };\n\n            matrix.chords = function () {\n                return chordLayout.chords().map(function (chord) {\n                    chord._id = chordID(chord);\n                    chord.source._id = matrixIndex[chord.source.index];\n                    chord.target._id = matrixIndex[chord.target.index];\n                    return chord;\n                });\n            };\n\n            matrix.addKey = function (key, data) {\n                if (!indexHash[key]) {\n                    indexHash[key] = { name: key, data: data || {} };\n                }\n            };\n\n            matrix.addKeys = function (props, fun) {\n                for (var i = 0; i < dataStore.length; i++) {\n                    for (var j = 0; j < props.length; j++) {\n                        this.addKey(dataStore[i][props[j]], fun ? fun(dataStore[i], props[j]) : {});\n                    }\n                }\n                return this;\n            };\n\n            matrix.resetKeys = function () {\n                indexHash = {};\n                return this;\n            };\n\n            function chordID(d) {\n                var s = matrixIndex[d.source.index];\n                var t = matrixIndex[d.target.index];\n                return (s < t) ? s + \"__\" + t : t + \"__\" + s;\n            }\n\n            matrix.groupTween = function (d3_arc) {\n                return function (d, i) {\n                    var tween;\n                    var cached = layoutCache.groups[d._id];\n\n                    if (cached) {\n                        tween = d3.interpolateObject(cached, d);\n                    } else {\n                        tween = d3.interpolateObject({\n                            startAngle: d.startAngle,\n                            endAngle: d.startAngle\n                        }, d);\n                    }\n\n                    return function (t) {\n                        return d3_arc(tween(t));\n                    };\n                };\n            };\n\n            matrix.chordTween = function (d3_path) {\n                return function (d, i) {\n                    var tween, groups;\n                    var cached = layoutCache.chords[d._id];\n\n                    if (cached) {\n                        if (d.source._id !== cached.source._id) {\n                            cached = { source: cached.target, target: cached.source };\n                        }\n                        tween = d3.interpolateObject(cached, d);\n                    } else {\n                        if (layoutCache.groups) {\n                            groups = [];\n                            for (var key in layoutCache.groups) {\n                                cached = layoutCache.groups[key];\n                                if (cached._id === d.source._id || cached._id === d.target._id) {\n                                    groups.push(cached);\n                                }\n                            }\n                            if (groups.length > 0) {\n                                cached = { source: groups[0], target: groups[1] || groups[0] };\n                                if (d.source._id !== cached.source._id) {\n                                    cached = { source: cached.target, target: cached.source };\n                                }\n                            } else {\n                                cached = d;\n                            }\n                        } else {\n                            cached = d;\n                        }\n\n                        tween = d3.interpolateObject({\n                            source: {\n                                startAngle: cached.source.startAngle,\n                                endAngle: cached.source.startAngle\n                            },\n                            target: {\n                                startAngle: cached.target.startAngle,\n                                endAngle: cached.target.startAngle\n                            }\n                        }, d);\n                    }\n\n                    return function (t) {\n                        return d3_path(tween(t));\n                    };\n                };\n            };\n\n            matrix.read = function (d) {\n                var g, m = {};\n\n                if (d.source) {\n                    m.sname = d.source._id;\n                    m.sdata = d.source.value;\n                    m.svalue = +d.source.value;\n                    m.stotal = _matrix[d.source.index].reduce(function (k, n) { return k + n; }, 0);\n                    m.tname = d.target._id;\n                    m.tdata = d.target.value;\n                    m.tvalue = +d.target.value;\n                    m.ttotal = _matrix[d.target.index].reduce(function (k, n) { return k + n; }, 0);\n                } else {\n                    g = indexHash[d._id];\n                    m.gname = g.name;\n                    m.gdata = g.data;\n                    m.gvalue = d.value;\n                }\n                m.mtotal = _matrix.reduce(function (m1, n1) {\n                    return m1 + n1.reduce(function (m2, n2) { return m2 + n2; }, 0);\n                }, 0);\n                return m;\n            };\n\n            return matrix;\n        };\n\n        return {\n            chordMatrix: chordMatrix\n        };\n    }\n\n    angular.module('d3-chord').directive('d3Chord',d3ChordDirective);\n    d3ChordDirective.$inject = [\"$window\", \"matrixFactory\"];\n    function d3ChordDirective($window, matrixFactory) {\n        let colorPalette = [\n            \"#52c3f1\", \"#f77b6b\", \"#e3d64a\", \"#6767da\", \"#68d4b2\", \"#369d97\",\n            \"#74d9ed\", \"#f8a13f\", \"#dae342\", \"#8d7be3\", \"#a4e59b\", \"#54becc\"\n        ];\n        var link = function ($scope, $el, $attr) {\n            $scope.id = \"d3-\" + $scope.$id;\n            let $container = $el, $tooltip = $container.find(\".tooltip\");\n            let marg = [50, 50, 50, 50]; // TOP, RIGHT, BOTTOM, LEFT\n            let size = getSize();\n            let colors = d3.scale.ordinal()\n                .range(colorPalette);\n\n            let chord = d3.layout.chord()\n                .padding(0.02)\n                .sortGroups(d3.descending)\n                .sortSubgroups(d3.ascending);\n            let matrix = matrixFactory.chordMatrix()\n                .layout(chord)\n                .filter(function (item, r, c) {\n                    return (item.node1 === r.name && item.node2 === c.name) ||\n                        (item.node1 === c.name && item.node2 === r.name);\n                })\n                .reduce(function (items, r, c) {\n                    var value;\n                    if (!items[0]) {\n                        value = 0;\n                    } else {\n                        value = items.reduce(function (m, n) {\n                            if (r === c) {\n                                return m + (n.weight1 + n.weight2);\n                            } else {\n                                return m + (n.node1 === r.name ? n.weight1 : n.weight2);\n                            }\n                        }, 0);\n                    }\n                    return { value: value, data: items };\n                });\n\n            let innerRadius = (size.dims[1] / 2) - 100;\n\n            let arc = d3.svg.arc()\n                .innerRadius(innerRadius)\n                .outerRadius(innerRadius + 20);\n\n            let path = d3.svg.chord()\n                .radius(innerRadius);\n\n\n            let svg = d3.select($container[0]).append(\"svg\")\n                .attr(\"class\", \"chart\")\n                .attr({ width: size.width + \"px\", height: size.height + \"px\" })\n                .attr(\"preserveAspectRatio\", \"xMinYMin\")\n                .attr(\"viewBox\", \"0 0 \" + size.width + \" \" + size.height);\n\n            let gContainer = svg.append(\"g\")\n                .attr(\"class\", \"g-container\")\n                .attr(\"transform\", \"translate(\" + ((size.dims[0] / 2) + marg[3]) + \",\" + ((size.dims[1] / 2) + marg[0]) + \")\");\n            let messages = svg.append(\"text\")\n                .attr(\"class\", \"messages\")\n                .attr(\"transform\", \"translate(10, 10)\")\n                .text(\"loading...\");\n\n            //绘制图形\n            function draw(data) {\n                messages.attr(\"opacity\", 1);\n                messages.transition().duration(1000).attr(\"opacity\", 0);\n                matrix.data(data)\n                    .resetKeys()\n                    .addKeys(['node1', 'node2'])\n                    .update();\n                let groups = gContainer.selectAll(\"g.group\")\n                    .data(matrix.groups(), function (d) {\n                        return d._id;\n                    });\n\n                let gEnter = groups.enter()\n                    .append(\"g\")\n                    .attr(\"class\", \"group\");\n\n                gEnter.append(\"path\")\n                    .on(\"click\", groupClick)\n                    .on(\"mouseover\", dimChords)\n                    .on(\"mouseout\", resetChords)\n                    .style(\"fill\", function (d) {\n                        return colors(d._id);\n                    })\n                    .attr(\"d\", arc);\n\n                gEnter.append(\"text\")\n                    .style(\"pointer-events\", \"none\")\n                    .style(\"font-size\", \"9px\")\n                    .attr(\"dy\", \".35em\")\n                    .text(function (d) {\n                        return d._id;\n                    });\n\n                groups.select(\"path\")\n                    .transition().duration(2000)\n                    .attrTween(\"d\", matrix.groupTween(arc));\n\n                groups.select(\"text\")\n                    .transition()\n                    .duration(2000)\n                    .attr(\"transform\", function (d) {\n                        d.angle = (d.startAngle + d.endAngle) / 2;\n                        var r = \"rotate(\" + (d.angle * 180 / Math.PI - 90) + \")\";\n                        var t = \" translate(\" + (innerRadius + 26) + \")\";\n                        return r + t + (d.angle > Math.PI ? \" rotate(180)\" : \" rotate(0)\");\n                    })\n                    .attr(\"text-anchor\", function (d) {\n                        return d.angle > Math.PI ? \"end\" : \"begin\";\n                    });\n\n                groups.exit().select(\"text\").attr(\"fill\", \"orange\");\n                groups.exit().select(\"path\").remove();\n\n                groups.exit().transition().duration(1000)\n                    .style(\"opacity\", 0).remove();\n\n                let chords = gContainer.selectAll(\"path.chord\")\n                    .data(matrix.chords(), function (d) {\n                        return d._id;\n                    });\n\n                chords.enter().append(\"path\")\n                    .attr(\"class\", \"chord\")\n                    .style(\"fill\", function (d) {\n                        return colors(d.source._id);\n                    })\n                    .attr(\"d\", path)\n                    .on(\"mouseover\", chordMouseover)\n                    .on(\"mouseout\", hideTooltip);\n\n                chords.transition().duration(2000)\n                    .attrTween(\"d\", matrix.chordTween(path));\n\n                chords.exit().remove();\n                //点击事件\n                function groupClick(d) {\n                    d3.event.preventDefault();\n                    d3.event.stopPropagation();\n                    let config = $scope.config;\n                    if (config.callback && config.callback.groupClick) {\n                        config.callback.groupClick(d);\n                        if (!$scope.$$phase && !$scope.$root.$$phase) $scope.$apply();\n                    }\n                    resetChords();\n                }\n\n                //鼠标飘过事件\n                function chordMouseover(d) {\n                    d3.event.preventDefault();\n                    d3.event.stopPropagation();\n                    dimChords(d);\n                    $tooltip.css(\"opacity\", 1);\n                    let config = $scope.config;\n                    if (config.tooltip.formatter) {\n                        let info = config.tooltip.formatter(matrix.read(d));\n                        $tooltip.css({ left: d3.event.offsetX + 20, top: d3.event.offsetY + 20 }).html(info);\n                    }\n                }\n\n                //隐藏tooltip\n                function hideTooltip() {\n                    d3.event.preventDefault();\n                    d3.event.stopPropagation();\n                    $tooltip.css(\"opacity\", 0);\n                    resetChords();\n                }\n\n                //重置\n                function resetChords() {\n                    d3.event.preventDefault();\n                    d3.event.stopPropagation();\n                    gContainer.selectAll(\"path.chord\").style(\"opacity\", 0.9);\n                }\n\n                function dimChords(d) {\n                    d3.event.preventDefault();\n                    d3.event.stopPropagation();\n                    gContainer.selectAll(\"path.chord\").style(\"opacity\", function (p) {\n                        if (d.source) { // COMPARE CHORD IDS\n                            return (p._id === d._id) ? 0.9 : 0.1;\n                        } else { // COMPARE GROUP IDS\n                            return (p.source._id === d._id || p.target._id === d._id) ? 0.9 : 0.1;\n                        }\n                    });\n                }\n            }\n\n            $scope.$watch(\"config.data\", function (current, prev) {\n                draw(current);\n            });\n            function getSize() {\n                let dims = []; // USABLE DIMENSIONS\n                let dimension = $scope.dimension;\n                let width, height, ratio = [1, 1];\n                if (dimension) {\n                    ratio = dimension.split(\":\").reverse().map(Number);\n                }\n                let clientWidth = $container[0].clientWidth;\n                if (clientWidth < 10) {\n                    width = 1200;\n                    height = 800;\n                } else {\n                    width = clientWidth;\n                    height = width * ratio[0] / ratio[1];\n                }\n                dims[0] = width - marg[1] - marg[3]; // WIDTH\n                dims[1] = height - marg[0] - marg[2]; // HEIGHT\n                return { width, height, dims };\n            }\n            function resize() {\n                size = getSize();\n                svg.attr({\n                    width: size.width,\n                    height: size.height\n                });\n            }\n\n            resize();\n            $window.addEventListener(\"resize\", function () {\n                resize();\n            });\n        };\n\n        return {\n            restrict: 'EA',\n            template: \"<div id='{{id}}' class='d3-container'><div class='tooltip'></div>\",\n            replace: true,\n            scope: {\n                config: \"=\",\n                dimension: \"=\"\n            },\n            link: link\n        };\n    }\n})(angular);\n\n"],"sourceRoot":"/source/"}